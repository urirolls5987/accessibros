// Redesigned Accessibility Widget Script

(function() {
    // Initialize the widget
    function initAccessibilityWidget() {
      const widget = createWidgetElement();
      document.body.appendChild(widget);
      loadSettings();
      applyStyles();
    }
  
    // Create the widget element
    function createWidgetElement() {
      const widget = document.createElement('div');
      widget.classList.add('asw-widget');
      widget.innerHTML = `
        <button class="asw-menu-btn" aria-label="Toggle Accessibility Menu">
          <span class="material-icons md-36 white">accessibility_new</span>
        </button>
        <div class="asw-menu" style="display: none;">
          <div class="asw-menu-header">
            <div>Accessibility Options</div>
            <div>
              <div role="button" class="asw-menu-reset" title="Reset Settings">
                <span class="material-icons">restart_alt</span>
              </div>
              <div role="button" class="asw-menu-close" title="Close Accessibility Menu">
                <span class="material-icons">close</span>
              </div>
            </div>
          </div>
          <div class="asw-menu-content">
            <div class="asw-section">
              <h3>Text Adjustments</h3>
              <div class="asw-option">
                <label for="font-size">Font Size:</label>
                <div class="asw-slider-container">
                  <button class="asw-btn-small" data-action="decreaseFontSize">-</button>
                  <input type="range" id="font-size" min="50" max="200" step="10" value="100">
                  <button class="asw-btn-small" data-action="increaseFontSize">+</button>
                </div>
                <span class="asw-value">100%</span>
              </div>
              <div class="asw-option">
                <label for="line-height">Line Height:</label>
                <div class="asw-slider-container">
                  <button class="asw-btn-small" data-action="decreaseLineHeight">-</button>
                  <input type="range" id="line-height" min="100" max="200" step="10" value="100">
                  <button class="asw-btn-small" data-action="increaseLineHeight">+</button>
                </div>
                <span class="asw-value">100%</span>
              </div>
              <div class="asw-option">
                <label for="letter-spacing">Letter Spacing:</label>
                <div class="asw-slider-container">
                  <button class="asw-btn-small" data-action="decreaseLetterSpacing">-</button>
                  <input type="range" id="letter-spacing" min="0" max="10" step="1" value="0">
                  <button class="asw-btn-small" data-action="increaseLetterSpacing">+</button>
                </div>
                <span class="asw-value">0px</span>
              </div>
            </div>
            <div class="asw-section">
              <h3>Color & Contrast</h3>
              <button class="asw-btn" data-action="toggleHighContrast">
                <span class="material-icons">contrast</span>
                <span class="asw-translate">High Contrast</span>
              </button>
              <button class="asw-btn" data-action="toggleGrayscale">
                <span class="material-icons">filter_b_and_w</span>
                <span class="asw-translate">Grayscale</span>
              </button>
            </div>
            <div class="asw-section">
              <h3>Additional Features</h3>
              <button class="asw-btn" data-action="toggleDyslexicFont">
                <span class="material-icons">spellcheck</span>
                <span class="asw-translate">Dyslexic Font</span>
              </button>
              <button class="asw-btn" data-action="toggleHighlightLinks">
                <span class="material-icons">link</span>
                <span class="asw-translate">Highlight Links</span>
              </button>
              <button class="asw-btn" data-action="toggleBigCursor">
                <span class="material-icons">mouse</span>
                <span class="asw-translate">Big Cursor</span>
              </button>
              <button class="asw-btn" data-action="toggleScreenReader">
                <span class="material-icons">hearing</span>
                <span class="asw-translate">Screen Reader</span>
              </button>
            </div>
          </div>
          <div class="asw-banner">
            <a href="https://www.brightwaysaccess.com/" target="_blank" rel="noopener noreferrer">Brightways</a>
          </div>
        </div>
      `;
      
      addEventListeners(widget);
      return widget;
    }
  
    // Add event listeners to widget elements
    function addEventListeners(widget) {
      const toggleBtn = widget.querySelector('.asw-menu-btn');
      const menu = widget.querySelector('.asw-menu');
      const closeBtn = widget.querySelector('.asw-menu-close');
      const resetBtn = widget.querySelector('.asw-menu-reset');
      const actionBtns = widget.querySelectorAll('.asw-btn, .asw-btn-small');
      const sliders = widget.querySelectorAll('input[type="range"]');
  
      toggleBtn.addEventListener('click', () => {
        menu.style.display = menu.style.display === 'none' ? 'block' : 'none';
      });
  
      closeBtn.addEventListener('click', () => {
        menu.style.display = 'none';
      });
  
      resetBtn.addEventListener('click', resetSettings);
  
      actionBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          const action = btn.dataset.action;
          if (typeof window[action] === 'function') {
            window[action]();
            btn.classList.toggle('asw-selected');
            saveSettings();
          }
        });
      });
  
      sliders.forEach(slider => {
        slider.addEventListener('input', () => {
          const action = slider.id.replace(/-/g, ' ');
          if (typeof window[`adjust${action.charAt(0).toUpperCase() + action.slice(1)}`] === 'function') {
            window[`adjust${action.charAt(0).toUpperCase() + action.slice(1)}`](parseFloat(slider.value));
            slider.nextElementSibling.textContent = `${slider.value}${slider.id === 'letter-spacing' ? 'px' : '%'}`;
            saveSettings();
          }
        });
      });
    }
  
    // Accessibility Features
  
    // Adjust font size
    window.adjustFontSize = function(value) {
      document.documentElement.style.setProperty('--font-size-multiplier', value / 100);
      localStorage.setItem('fontSize', value);
    };
  
    window.increaseFontSize = function() {
      const slider = document.getElementById('font-size');
      slider.value = Math.min(200, parseInt(slider.value) + 10);
      slider.dispatchEvent(new Event('input'));
    };
  
    window.decreaseFontSize = function() {
      const slider = document.getElementById('font-size');
      slider.value = Math.max(50, parseInt(slider.value) - 10);
      slider.dispatchEvent(new Event('input'));
    };
  
    // Adjust line height
    window.adjustLineHeight = function(value) {
      document.documentElement.style.setProperty('--line-height-multiplier', value / 100);
      localStorage.setItem('lineHeight', value);
    };
  
    window.increaseLineHeight = function() {
      const slider = document.getElementById('line-height');
      slider.value = Math.min(200, parseInt(slider.value) + 10);
      slider.dispatchEvent(new Event('input'));
    };
  
    window.decreaseLineHeight = function() {
      const slider = document.getElementById('line-height');
      slider.value = Math.max(100, parseInt(slider.value) - 10);
      slider.dispatchEvent(new Event('input'));
    };
  
    // Adjust letter spacing
    window.adjustLetterSpacing = function(value) {
      document.documentElement.style.setProperty('--letter-spacing', `${value}px`);
      localStorage.setItem('letterSpacing', value);
    };
  
    window.increaseLetterSpacing = function() {
      const slider = document.getElementById('letter-spacing');
      slider.value = Math.min(10, parseInt(slider.value) + 1);
      slider.dispatchEvent(new Event('input'));
    };
  
    window.decreaseLetterSpacing = function() {
      const slider = document.getElementById('letter-spacing');
      slider.value = Math.max(0, parseInt(slider.value) - 1);
      slider.dispatchEvent(new Event('input'));
    };
  
    // Toggle dyslexic font
    window.toggleDyslexicFont = function() {
      document.body.classList.toggle('dyslexic-font');
      localStorage.setItem('dyslexicFont', document.body.classList.contains('dyslexic-font'));
    };
  
    // Toggle high contrast
    window.toggleHighContrast = function() {
      document.body.classList.toggle('high-contrast');
      localStorage.setItem('highContrast', document.body.classList.contains('high-contrast'));
    };
  
    // Toggle grayscale
    window.toggleGrayscale = function() {
      document.body.classList.toggle('grayscale');
      localStorage.setItem('grayscale', document.body.classList.contains('grayscale'));
    };
  
    // Toggle highlight links
    window.toggleHighlightLinks = function() {
      document.body.classList.toggle('highlight-links');
      localStorage.setItem('highlightLinks', document.body.classList.contains('highlight-links'));
    };
  
    // Toggle big cursor
    window.toggleBigCursor = function() {
      document.body.classList.toggle('big-cursor');
      localStorage.setItem('bigCursor', document.body.classList.contains('big-cursor'));
    };
  
    // Toggle screen reader
    window.toggleScreenReader = function() {
      const isScreenReaderEnabled = document.body.classList.toggle('screen-reader-enabled');
      localStorage.setItem('screenReaderEnabled', isScreenReaderEnabled);
  
      if (isScreenReaderEnabled) {
        const utterance = new SpeechSynthesisUtterance(document.body.textContent);
        window.speechSynthesis.speak(utterance);
      } else {
        window.speechSynthesis.cancel();
      }
    };
  
    // Reset all settings
    function resetSettings() {
      document.documentElement.style.removeProperty('--font-size-multiplier');
      document.documentElement.style.removeProperty('--line-height-multiplier');
      document.documentElement.style.removeProperty('--letter-spacing');
      document.body.classList.remove('dyslexic-font', 'high-contrast', 'grayscale', 'highlight-links', 'big-cursor', 'screen-reader-enabled');
      
      localStorage.clear();
  
      document.querySelectorAll('.asw-btn').forEach(btn => btn.classList.remove('asw-selected'));
      document.querySelectorAll('input[type="range"]').forEach(slider => {
        slider.value = slider.id === 'letter-spacing' ? 0 : 100;
        slider.dispatchEvent(new Event('input'));
      });
    }
  
    // Load settings
    function loadSettings() {
      const fontSize = localStorage.getItem('fontSize');
      if (fontSize) {
        document.documentElement.style.setProperty('--font-size-multiplier', fontSize / 100);
        document.getElementById('font-size').value = fontSize;
      }
  
      const lineHeight = localStorage.getItem('lineHeight');
      if (lineHeight) {
        document.documentElement.style.setProperty('--line-height-multiplier', lineHeight / 100);
        document.getElementById('line-height').value = lineHeight;
      }
  
      const letterSpacing = localStorage.getItem('letterSpacing');
      if (letterSpacing) {
        document.documentElement.style.setProperty('--letter-spacing', `${letterSpacing}px`);
        document.getElementById('letter-spacing').value = letterSpacing;
      }
  
      if (localStorage.getItem('dyslexicFont') === 'true') document.body.classList.add('dyslexic-font');
      if (localStorage.getItem('highContrast') === 'true') document.body.classList.add('high-contrast');
      if (localStorage.getItem('grayscale') === 'true') document.body.classList.add('grayscale');
      if (localStorage.getItem('highlightLinks') === 'true') document.body.classList.add('highlight-links');
      if (localStorage.getItem('bigCursor') === 'true') document.body.classList.add('big-cursor');
      if (localStorage.getItem('screenReaderEnabled') === 'true') document.body.classList.add('screen-reader-enabled');
  
      document.querySelectorAll('.asw-btn').forEach(btn => {
        const action = btn.dataset.action;
        if (localStorage.getItem(action) === 'true') {
          btn.classList.add('asw-selected');
        }
      });
  
      document.querySelectorAll('input[type="range"]').forEach(slider => {
        slider.nextElementSibling.textContent = `${slider.value}${slider.id === 'letter-spacing' ? 'px' : '%'}`;
      });
    }
  
    // Apply styles
    function applyStyles() {
      const style = document.createElement('style');
      style.textContent = `
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@200;300;400;500;600;700&display=swap');
        @import url('https://fonts.googleapis.com/icon?family=Material+Icons');
  
        :root {
          --font-size-multiplier: 1;
          --line-height-multiplier: 1;
          --letter-spacing: 0px;
        }
  
        body {
          font-size: calc(1rem * var(--font-size-multiplier));
          line-height: calc(1.5 * var(--line-height-multiplier));
          letter-spacing: var(--letter-spacing);
        }
  
        .asw-widget {
          font-family: 'Inter', sans-serif;
          position: fixed;
          right: 20px;
          bottom: 20px;
          z-index: 9999;
        }
  
        .asw-menu {
          position: fixed;
          right: 20px;
          bottom: 80px;
          width: 300px;
          max-height: 80vh;
          border-radius: 8px;
          background: #ffffff;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          overflow-y: auto;
        }
  
        .asw-menu-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 15px;
          background: #f0f0f0;
          border-bottom: 1px solid #e0e0e0;
        }
  
        .asw-menu-.asw-menu-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        background: #f0f0f0;
        border-bottom: 1px solid #e0e0e0;
      }

      .asw-menu-content {
        padding: 15px;
      }

      .asw-section {
        background: #f9f9f9;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
      }

      .asw-section h3 {
        margin: 0 0 10px;
        font-size: 16px;
        font-weight: 600;
      }

      .asw-option {
        margin-bottom: 10px;
      }

      .asw-option label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
      }

      .asw-slider-container {
        display: flex;
        align-items: center;
      }

      .asw-slider-container input[type="range"] {
        flex-grow: 1;
        margin: 0 10px;
      }

      .asw-btn-small {
        width: 30px;
        height: 30px;
        border: none;
        background: #e0e0e0;
        border-radius: 50%;
        cursor: pointer;
        font-weight: bold;
      }

      .asw-btn {
        display: flex;
        align-items: center;
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        background: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .asw-btn:hover {
        background: #f0f0f0;
      }

      .asw-btn.asw-selected {
        background: #419d4a;
        color: white;
      }

      .asw-btn .material-icons {
        margin-right: 10px;
      }

      .asw-menu-btn {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: #419d4a;
        color: white;
        border: none;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease;
      }

      .asw-menu-btn:hover {
        transform: scale(1.1);
      }

      .asw-banner {
        background: #419d4a;
        color: white;
        text-align: center;
        padding: 10px;
      }

      .asw-banner a {
        color: white;
        text-decoration: none;
        font-weight: 600;
      }

      @font-face {
        font-family: 'OpenDyslexic';
        src: url('https://cdn.jsdelivr.net/npm/open-dyslexic@1.0.3/open-dyslexic-regular.woff') format('woff');
        font-weight: normal;
        font-style: normal;
      }

      body.dyslexic-font * {
        font-family: 'OpenDyslexic', sans-serif !important;
      }

      body.high-contrast {
        filter: contrast(150%);
      }

      body.grayscale {
        filter: grayscale(100%);
      }

      body.highlight-links a {
        background-color: yellow !important;
        color: black !important;
      }

      body.big-cursor,
      body.big-cursor * {
        cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewport="0 0 100 100" style="fill:black;font-size:24px;"><text y="50%">➔</text></svg>') 16 0, auto !important;
      }

      @media (max-width: 480px) {
        .asw-menu {
          width: 90%;
          right: 5%;
          left: 5%;
        }
      }
    `;
    document.head.appendChild(style);
  }

  // Save settings
  function saveSettings() {
    const settings = {
      fontSize: document.getElementById('font-size').value,
      lineHeight: document.getElementById('line-height').value,
      letterSpacing: document.getElementById('letter-spacing').value,
      dyslexicFont: document.body.classList.contains('dyslexic-font'),
      highContrast: document.body.classList.contains('high-contrast'),
      grayscale: document.body.classList.contains('grayscale'),
      highlightLinks: document.body.classList.contains('highlight-links'),
      bigCursor: document.body.classList.contains('big-cursor'),
      screenReaderEnabled: document.body.classList.contains('screen-reader-enabled')
    };

    Object.keys(settings).forEach(key => {
      localStorage.setItem(key, settings[key]);
    });
  }

  // Initialize the widget when the DOM is fully loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initAccessibilityWidget);
  } else {
    initAccessibilityWidget();
  }
})();