// Accessibility Widget Script

// Initialize the widget
function initAccessibilityWidget() {
    const widget = createWidgetElement();
    document.body.appendChild(widget);
    
    // Load saved settings
    loadSettings();
    
    // Apply initial styles
    applyStyles();
  }
  
  // Create the widget element
  function createWidgetElement() {
    const widget = document.createElement('div');
    widget.id = 'accessibility-widget';
    widget.innerHTML = `
      <button id="accessibility-toggle" aria-label="Toggle Accessibility Menu">
        <span class="material-icons">accessibility_new</span>
      </button>
      <div id="accessibility-menu" class="hidden">
        <h2>Accessibility Options</h2>
        <div class="option">
          <label for="font-size">Font Size:</label>
          <input type="range" id="font-size" min="100" max="200" step="10" value="100">
        </div>
        <div class="option">
          <label for="contrast">High Contrast:</label>
          <input type="checkbox" id="contrast">
        </div>
        <div class="option">
          <label for="dyslexic-font">Dyslexic-friendly Font:</label>
          <input type="checkbox" id="dyslexic-font">
        </div>
        <div class="option">
          <label for="line-height">Line Height:</label>
          <input type="range" id="line-height" min="100" max="200" step="10" value="100">
        </div>
        <div class="option">
          <label for="letter-spacing">Letter Spacing:</label>
          <input type="range" id="letter-spacing" min="0" max="10" step="1" value="0">
        </div>
        <div class="option">
          <label for="highlight-links">Highlight Links:</label>
          <input type="checkbox" id="highlight-links">
        </div>
        <div class="option">
          <button id="reset-settings">Reset All Settings</button>
        </div>
      </div>
    `;
    
    addEventListeners(widget);
    return widget;
  }
  
  // Add event listeners to widget elements
  function addEventListeners(widget) {
    const toggle = widget.querySelector('#accessibility-toggle');
    const menu = widget.querySelector('#accessibility-menu');
    const fontSizeInput = widget.querySelector('#font-size');
    const contrastInput = widget.querySelector('#contrast');
    const dyslexicFontInput = widget.querySelector('#dyslexic-font');
    const lineHeightInput = widget.querySelector('#line-height');
    const letterSpacingInput = widget.querySelector('#letter-spacing');
    const highlightLinksInput = widget.querySelector('#highlight-links');
    const resetButton = widget.querySelector('#reset-settings');
  
    toggle.addEventListener('click', () => menu.classList.toggle('hidden'));
    fontSizeInput.addEventListener('input', updateFontSize);
    contrastInput.addEventListener('change', updateContrast);
    dyslexicFontInput.addEventListener('change', updateDyslexicFont);
    lineHeightInput.addEventListener('input', updateLineHeight);
    letterSpacingInput.addEventListener('input', updateLetterSpacing);
    highlightLinksInput.addEventListener('change', updateHighlightLinks);
    resetButton.addEventListener('click', resetSettings);
  }
  
  // Update font size
  function updateFontSize(event) {
    const size = event.target.value;
    document.documentElement.style.setProperty('--font-size-multiplier', `${size}%`);
    saveSettings('fontSize', size);
  }
  
  // Update contrast
  function updateContrast(event) {
    const highContrast = event.target.checked;
    document.body.classList.toggle('high-contrast', highContrast);
    saveSettings('highContrast', highContrast);
  }
  
  // Update dyslexic-friendly font
  function updateDyslexicFont(event) {
    const useDyslexicFont = event.target.checked;
    document.body.classList.toggle('dyslexic-font', useDyslexicFont);
    saveSettings('dyslexicFont', useDyslexicFont);
  }
  
  // Update line height
  function updateLineHeight(event) {
    const height = event.target.value;
    document.documentElement.style.setProperty('--line-height-multiplier', `${height}%`);
    saveSettings('lineHeight', height);
  }
  
  // Update letter spacing
  function updateLetterSpacing(event) {
    const spacing = event.target.value;
    document.documentElement.style.setProperty('--letter-spacing', `${spacing}px`);
    saveSettings('letterSpacing', spacing);
  }
  
  // Update highlight links
  function updateHighlightLinks(event) {
    const highlight = event.target.checked;
    document.body.classList.toggle('highlight-links', highlight);
    saveSettings('highlightLinks', highlight);
  }
  
  // Reset all settings
  function resetSettings() {
    document.documentElement.style.removeProperty('--font-size-multiplier');
    document.documentElement.style.removeProperty('--line-height-multiplier');
    document.documentElement.style.removeProperty('--letter-spacing');
    document.body.classList.remove('high-contrast', 'dyslexic-font', 'highlight-links');
    
    // Reset input values
    document.querySelector('#font-size').value = 100;
    document.querySelector('#contrast').checked = false;
    document.querySelector('#dyslexic-font').checked = false;
    document.querySelector('#line-height').value = 100;
    document.querySelector('#letter-spacing').value = 0;
    document.querySelector('#highlight-links').checked = false;
    
    // Clear saved settings
    localStorage.removeItem('accessibilitySettings');
  }
  
  // Save settings to localStorage
  function saveSettings(key, value) {
    const settings = JSON.parse(localStorage.getItem('accessibilitySettings')) || {};
    settings[key] = value;
    localStorage.setItem('accessibilitySettings', JSON.stringify(settings));
  }
  
  // Load settings from localStorage
  function loadSettings() {
    const settings = JSON.parse(localStorage.getItem('accessibilitySettings')) || {};
    
    if (settings.fontSize) {
      document.querySelector('#font-size').value = settings.fontSize;
      document.documentElement.style.setProperty('--font-size-multiplier', `${settings.fontSize}%`);
    }
    
    if (settings.highContrast) {
      document.querySelector('#contrast').checked = settings.highContrast;
      document.body.classList.toggle('high-contrast', settings.highContrast);
    }
    
    if (settings.dyslexicFont) {
      document.querySelector('#dyslexic-font').checked = settings.dyslexicFont;
      document.body.classList.toggle('dyslexic-font', settings.dyslexicFont);
    }
    
    if (settings.lineHeight) {
      document.querySelector('#line-height').value = settings.lineHeight;
      document.documentElement.style.setProperty('--line-height-multiplier', `${settings.lineHeight}%`);
    }
    
    if (settings.letterSpacing) {
      document.querySelector('#letter-spacing').value = settings.letterSpacing;
      document.documentElement.style.setProperty('--letter-spacing', `${settings.letterSpacing}px`);
    }
    
    if (settings.highlightLinks) {
      document.querySelector('#highlight-links').checked = settings.highlightLinks;
      document.body.classList.toggle('highlight-links', settings.highlightLinks);
    }
  }
  
  // Apply styles to the document
  function applyStyles() {
    const styleElement = document.createElement('style');
    styleElement.textContent = `
      :root {
        --font-size-multiplier: 100%;
        --line-height-multiplier: 100%;
        --letter-spacing: 0px;
      }
      
      body {
        font-size: calc(1rem * var(--font-size-multiplier) / 100);
        line-height: calc(1.5 * var(--line-height-multiplier) / 100);
        letter-spacing: var(--letter-spacing);
      }
      
      body.high-contrast {
        background-color: black;
        color: yellow;
      }
      
      body.dyslexic-font {
        font-family: 'OpenDyslexic', sans-serif;
      }
      
      body.highlight-links a {
        background-color: yellow;
        color: black;
        text-decoration: underline;
      }
      
      #accessibility-widget {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
      }
      
      #accessibility-toggle {
        background-color: #0048ff;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        cursor: pointer;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease;
      }
      
      #accessibility-toggle:hover {
        transform: scale(1.1);
      }
      
      #accessibility-menu {
        position: absolute;
        bottom: 70px;
        right: 0;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        width: 300px;
      }
      
      #accessibility-menu.hidden {
        display: none;
      }
      
      #accessibility-menu h2 {
        margin-top: 0;
      }
      
      .option {
        margin-bottom: 15px;
      }
      
      .option label {
        display: block;
        margin-bottom: 5px;
      }
      
      #reset-settings {
        background-color: #ff4136;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      
      #reset-settings:hover {
        background-color: #ff7166;
      }
      
      @font-face {
        font-family: 'OpenDyslexic';
        src: url('https://cdn.jsdelivr.net/npm/open-dyslexic@1.0.3/open-dyslexic-regular.woff') format('woff');
        font-weight: normal;
        font-style: normal;
      }
    `;
    document.head.appendChild(styleElement);
  }
  
  // Initialize the widget when the DOM is fully loaded
  document.addEventListener('DOMContentLoaded', initAccessibilityWidget);